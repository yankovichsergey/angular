{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/registration/registration.component.html","webpack:///./src/app/auth/registration/registration.component.scss","webpack:///./src/app/auth/registration/registration.component.ts","webpack:///./src/app/shared/animations/fade.animations.ts","webpack:///./src/app/shared/components/loader/loader.component.scss","webpack:///./src/app/shared/components/loader/loader.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/models/message.model.ts","webpack:///./src/app/shared/models/user.model.ts","webpack:///./src/app/shared/services/auth.guard.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/core/base-api.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./system/system.module\": [\n\t\t\"./src/app/system/system.module.ts\",\n\t\t\"system-system-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {NgModule} from '@angular/core';\r\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\r\n\r\nimport {NotFoundComponent} from './shared/components/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n    {path: 'system', loadChildren: './system/system.module#SystemModule'},\r\n    {path: '**', component: NotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes, {\r\n            preloadingStrategy: PreloadAllModules\r\n        })\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'home-money';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {AuthModule} from './auth/auth.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {UserService} from './shared/services/user.service';\nimport {AuthService} from './shared/services/auth.service';\nimport {AuthGuard} from './shared/services/auth.guard';\nimport {NotFoundComponent} from './shared/components/not-found/not-found.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        AuthModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n    ],\n    exports: [\n        NotFoundComponent\n    ],\n    providers: [\n        UserService,\n        AuthService,\n        AuthGuard\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {AuthComponent} from './auth.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: AuthComponent, children: [\r\n            {path: 'login', component: LoginComponent},\r\n            {path: 'registration', component: RegistrationComponent},\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AuthRoutingModule {\r\n\r\n}\r\n","module.exports = \"<div class=\\\"auth\\\">\\r\\n    <div class=\\\"auth-container\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <header class=\\\"auth-header\\\">\\r\\n                <h1 class=\\\"auth-title\\\">\\r\\n                    <div class=\\\"logo\\\">\\r\\n                        <span class=\\\"l l1\\\"></span>\\r\\n                        <span class=\\\"l l2\\\"></span>\\r\\n                        <span class=\\\"l l3\\\"></span>\\r\\n                        <span class=\\\"l l4\\\"></span>\\r\\n                        <span class=\\\"l l5\\\"></span>\\r\\n                    </div>\\r\\n                    Домашняя бухгалтерия\\r\\n                </h1>\\r\\n            </header>\\r\\n            <div class=\\\"auth-content\\\">\\r\\n               <router-outlet></router-outlet>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {fadeStateTrigger} from '../shared/animations/fade.animations';\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    animations: [fadeStateTrigger]\r\n})\r\nexport class AuthComponent implements OnInit {\r\n    @HostBinding('@fade') a = true;\r\n\r\n    constructor(private  router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.router.navigate(['/login']);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {AuthComponent} from './auth.component';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        RegistrationComponent,\r\n        AuthComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AuthRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\n\r\nexport class AuthModule {\r\n\r\n}\r\n","module.exports = \"<p class=\\\"text-xs-center\\\">Войдите для работы</p>\\n<div\\n        class=\\\"alert alert-{{message.type}}\\\"\\n        *ngIf=\\\"message.text\\\"\\n        @fade\\n>\\n    {{message.text}}\\n</div>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div\\n            class=\\\"form-group\\\"\\n            [ngClass]=\\\"{'has-error':form.get('email').invalid && form.get('email').touched}\\\"\\n\\n    >\\n        <label for=\\\"email\\\">Email</label>\\n        <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control underlined\\\"\\n                id=\\\"email\\\"\\n                placeholder=\\\"Введите ваш email\\\"\\n                formControlName=\\\"email\\\"\\n        >\\n        <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\">\\n             <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email')['errors']['required']\\\">\\n                 Email не может быть пустым\\n             </span>\\n            <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email')['errors']['email']\\\">\\n                Введите корректный email\\n            </span>\\n        </span>\\n\\n    </div>\\n    <div\\n            class=\\\"form-group\\\"\\n            [ngClass]=\\\"{'has-error':form.get('password').invalid && form.get('password').touched}\\\"\\n    >\\n        <label for=\\\"password\\\">Пароль</label>\\n        <input\\n                type=\\\"password\\\"\\n                class=\\\"form-control underlined\\\"\\n                id=\\\"password\\\"\\n                placeholder=\\\"Пароль\\\"\\n                formControlName=\\\"password\\\"\\n        >\\n        <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\n             <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password')['errors']['required']\\\">\\n                 Пароль не может быть пустым\\n             </span>\\n            <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password')['errors']['minlength'] && form.get('password')['errors']['minlength']['requiredLength']\\\">\\n                Пароль не должен быть короче {{form.get('password')['errors']['minlength']['requiredLength']}} символов.\\n                Сейчас введено {{form.get('password')['errors']['minlength']['actualLength']}}\\n            </span>\\n        </span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button\\n                type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\"\\n                [disabled]=\\\"form.invalid\\\"\\n        >Войти\\n        </button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <p class=\\\"text-muted text-xs-center\\\">\\n            Нет аккаунта? <a [routerLink]=\\\"'/registration'\\\">Зарегистрироваться!</a>\\n        </p>\\n    </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {Meta, Title} from '@angular/platform-browser';\n\nimport {UserService} from '../../shared/services/user.service';\nimport {UserModel} from '../../shared/models/user.model';\nimport {MessageModel} from '../../shared/models/message.model';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {fadeStateTrigger} from '../../shared/animations/fade.animations';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    animations: [fadeStateTrigger]\n})\nexport class LoginComponent implements OnInit {\n    public form: FormGroup;\n    public message: MessageModel;\n\n    constructor(\n        private userService: UserService,\n        private authServise: AuthService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private title: Title,\n        private meta: Meta\n    ) {\n        title.setTitle('Вход в систему');\n        meta.addTags([\n            {name: 'description', content: 'Crm система по учету расходов и доходов.'},\n            {name: 'keywords', content: 'Crm, Логин, Вход'}\n        ]);\n    }\n\n    ngOnInit() {\n        this.message = new MessageModel('danger', '');\n        this.form = new FormGroup({\n            'email': new FormControl(null, [\n                Validators.required,\n                Validators.email\n            ]),\n            'password': new FormControl(null, [\n                Validators.required,\n                Validators.minLength(6)\n            ]),\n        });\n        this.route.queryParams\n            .subscribe((params: Params) => {\n                if (params['nowCanLogin']) {\n                    this.showMessage({\n                        text: 'Теперь вы можете зайти в систему',\n                        type: 'success'\n                    });\n                } else if (params['accessDenied']) {\n                    this.showMessage({\n                        text: 'Сперва неоходимо авторизоваться',\n                        type: 'warning'\n                    });\n                }\n            });\n\n    }\n\n    private showMessage(message: MessageModel) {\n        this.message = message;\n        window.setTimeout(() => {\n            this.message.text = '';\n        }, 5000);\n    }\n\n    onSubmit() {\n        const formData = this.form.value;\n\n        this.userService.getUserByEmail(formData.email)\n            .subscribe((user: UserModel) => {\n                if (user) {\n                    if (user.password === formData.password) {\n                        this.message.text = '';\n                        window.localStorage.setItem('user', JSON.stringify(user));\n                        this.authServise.login();\n                        this.router.navigate(['/system', 'bill']);\n                    } else {\n                        this.showMessage({\n                            text: 'Не верный пароль',\n                            type: 'danger'\n                        });\n                    }\n                } else {\n                    this.showMessage({\n                        text: 'Такого пользователя не существует',\n                        type: 'danger'\n                    });\n                }\n            });\n    }\n\n}\n","module.exports = \"<p class=\\\"text-xs-center\\\">Регистрация для получения доступа</p>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error':form.get('email').invalid && form.get('email').touched}\\\"\\n    >\\n        <label for=\\\"email\\\">Email</label>\\n        <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control underlined\\\"\\n                id=\\\"email\\\"\\n                placeholder=\\\"Введите email\\\"\\n                formControlName=\\\"email\\\"\\n        >\\n        <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\">\\n             <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email')['errors']['required']\\\">\\n                 Email не может быть пустым.\\n             </span>\\n            <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email')['errors']['email']\\\">\\n                Введите корректный email.\\n            </span>\\n            <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('email')['errors']['forbiddenEmail']\\\">\\n                Такой email уже существует.\\n            </span>\\n        </span>\\n    </div>\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error':form.get('password').invalid && form.get('password').touched}\\\"\\n    >\\n        <label for=\\\"password\\\">Пароль</label>\\n        <input\\n                type=\\\"password\\\"\\n                class=\\\"form-control underlined\\\"\\n                id=\\\"password\\\"\\n                placeholder=\\\"Введите пароль\\\"\\n                formControlName=\\\"password\\\"\\n        >\\n        <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\n             <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password')['errors']['required']\\\">\\n                 Пароль не может быть пустым.\\n             </span>\\n            <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password')['errors']['minlength'] && form.get('password')['errors']['minlength']['requiredLength']\\\">\\n                Пароль не должен быть короче {{form.get('password')['errors']['minlength']['requiredLength']}} символов.\\n                Сейчас введено {{form.get('password')['errors']['minlength']['actualLength']}}\\n            </span>\\n        </span>\\n    </div>\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error':form.get('name').invalid && form.get('name').touched}\\\"\\n    >\\n        <label for=\\\"name\\\">Имя</label>\\n        <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control underlined\\\"\\n                id=\\\"name\\\"\\n                placeholder=\\\"Введите имя\\\"\\n                formControlName=\\\"name\\\"\\n        >\\n        <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\">\\n            Имя не может быть пустым.\\n        </span>\\n    </div>\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error':form.get('agree').invalid && form.get('agree').touched}\\\"\\n    >\\n        <label for=\\\"agree\\\">\\n            <input\\n                    class=\\\"checkbox\\\"\\n                    id=\\\"agree\\\"\\n                    type=\\\"checkbox\\\"\\n                    formControlName=\\\"agree\\\"\\n            >\\n            <span>Согласен с правилами</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button\\n                type=\\\"submit\\\"\\n                class=\\\"btn btn-block btn-primary\\\"\\n                [disabled]=\\\"form.invalid\\\"\\n        >Зарегистрироваться</button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <p class=\\\"text-muted text-xs-center\\\">\\n            Уже есть аккаунт?\\n            <a [routerLink]=\\\"'/login'\\\">\\n                Войти!\\n            </a>\\n        </p>\\n    </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Meta, Title} from '@angular/platform-browser';\nimport {Router} from '@angular/router';\n\nimport {UserService} from '../../shared/services/user.service';\nimport {UserModel} from '../../shared/models/user.model';\n\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n    form: FormGroup;\n\n    constructor(\n        private  userService: UserService,\n        private router: Router,\n        private title: Title,\n        private meta: Meta\n    ) {\n        title.setTitle('Регистрация в системе');\n        meta.addTags([\n            {name: 'description', content: 'Crm система по учету расходов и доходов.'},\n            {name: 'keywords', content: 'Crm, Регистрация'}\n        ]);\n    }\n\n    ngOnInit() {\n        this.form = new FormGroup({\n            'email': new FormControl(null, [\n                    Validators.required,\n                    Validators.email\n                ],\n                this.forbiddenEmail.bind(this)\n            ),\n            'password': new FormControl(null, [\n                Validators.required,\n                Validators.minLength(6)\n            ]),\n            'name': new FormControl(null, [\n                Validators.required,\n            ]),\n            'agree': new FormControl(false, [\n                Validators.requiredTrue\n            ]),\n        });\n    }\n\n    onSubmit() {\n        const {email, password, name} = this.form.value;\n        const user = new UserModel(email, password, name);\n        this.userService.createNewUser(user)\n            .subscribe(() => {\n                this.router.navigate(['/login'], {\n                    queryParams: {\n                        nowCanLogin: true\n                    }\n                });\n            });\n    }\n\n    forbiddenEmail(control: FormControl): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.userService.getUserByEmail(control.value)\n                .subscribe((user: UserModel) => {\n                    if (user) {\n                        resolve({forbiddenEmail: true});\n                    } else {\n                        resolve(null);\n                    }\n                });\n        });\n    }\n\n}\n","import {animate, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const fadeStateTrigger = trigger('fade', [\r\n    transition(':enter', [\r\n        style({\r\n            opacity: 0\r\n        }),\r\n        animate(500)\r\n    ]),\r\n    transition(':leave', animate(500, style({\r\n        opacity: 0\r\n    })))\r\n]);\r\n","module.exports = \"@-webkit-keyframes pace-spinner {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n@keyframes pace-spinner {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n.loader-animator {\\n  display: block;\\n  -webkit-animation: pace-spinner 400ms linear infinite;\\n          animation: pace-spinner 400ms linear infinite;\\n  border-color: rgba(0, 0, 0, 0.4) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0.4);\\n  -o-border-image: none;\\n     border-image: none;\\n  border-radius: 50%;\\n  border-right: 2px solid rgba(0, 0, 0, 0) !important;\\n  border-style: solid;\\n  border-width: 2px;\\n  height: 16px;\\n  width: 16px;\\n  margin: auto;\\n  z-index: 2000; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbG9hZGVyL0I6XFxPcGVuIFNlcnZlclxcZG9tYWluc1xcYW5ndWxhci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxsb2FkZXJcXGxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO0lBQ0UsK0JBQXVCO1lBQXZCLHVCQUF1QixFQUFBO0VBRXpCO0lBQ0UsaUNBQXlCO1lBQXpCLHlCQUF5QixFQUFBLEVBQUE7O0FBTDdCO0VBQ0U7SUFDRSwrQkFBdUI7WUFBdkIsdUJBQXVCLEVBQUE7RUFFekI7SUFDRSxpQ0FBeUI7WUFBekIseUJBQXlCLEVBQUEsRUFBQTs7QUFJN0I7RUFDRSxjQUFjO0VBQ2QscURBQTZDO1VBQTdDLDZDQUE2QztFQUM3QyxxRkFBcUY7RUFDckYscUJBQWtCO0tBQWxCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsbURBQW1EO0VBQ25ELG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbG9hZGVyL2xvYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBrZXlmcmFtZXMgcGFjZS1zcGlubmVyIHtcclxuICBmcm9tIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gIH1cclxufVxyXG5cclxuLmxvYWRlci1hbmltYXRvciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgYW5pbWF0aW9uOiBwYWNlLXNwaW5uZXIgNDAwbXMgbGluZWFyIGluZmluaXRlO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpIHJnYmEoMCwgMCwgMCwgMCkgcmdiYSgwLCAwLCAwLCAwKSByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbiAgYm9yZGVyLWltYWdlOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDApICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItd2lkdGg6IDJweDtcclxuICBoZWlnaHQ6IDE2cHg7XHJcbiAgd2lkdGg6IDE2cHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHotaW5kZXg6IDIwMDA7XHJcbn1cclxuIl19 */\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-loader',\r\n    template: `\r\n        <div class=\"loader-animator\"></div>\r\n    `,\r\n    styleUrls: ['./loader.component.scss']\r\n})\r\nexport class LoaderComponent {\r\n\r\n}\r\n","module.exports = \"<div class=\\\"not-found\\\">\\n    <h1 [ngStyle]=\\\"{fontSize: '60px', color: 'red', marginBottom: '20px',fontWeight: 'bold'}\\\">404</h1>\\n    <a [routerLink]=\\\"['/login']\\\">Перейти на логин</a>\\n</div>\\n\"","module.exports = \".not-found {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90LWZvdW5kL0I6XFxPcGVuIFNlcnZlclxcZG9tYWluc1xcYW5ndWxhci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxub3QtZm91bmRcXG5vdC1mb3VuZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdC1mb3VuZHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuIl19 */\"","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n\n}\n","export class MessageModel {\r\n    constructor(public type: string, public text: string) {\r\n        this.type = type;\r\n        this.text = text;\r\n    }\r\n}\r\n","export class UserModel {\r\n    constructor(\r\n        public email: string,\r\n        public password: string,\r\n        public name: string,\r\n        public id?: number,\r\n    ) {\r\n    }\r\n}\r\n","import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) {\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n        if (this.authService.isLoggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login'], {\r\n                queryParams: {\r\n                    accessDenied: true\r\n                }\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n        return this.canActivate(childRoute, state);\r\n    }\r\n\r\n}\r\n","export class AuthService {\r\n    private isAuthenticated = false;\r\n\r\n    login() {\r\n        this.isAuthenticated = true;\r\n    }\r\n\r\n    logout() {\r\n        this.isAuthenticated = false;\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.isAuthenticated;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class BaseApi {\r\n    public baseUrl = 'http://localhost:3000/';\r\n\r\n    // public baseUrl = 'https://kurs-690e7.firebaseio.com/';\r\n\r\n    constructor(\r\n        public http: HttpClient,\r\n    ) {\r\n    }\r\n\r\n    private getUrl(url: string = ''): string {\r\n        return this.baseUrl + url;\r\n    }\r\n\r\n    private getHeaders() {\r\n        return new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE, PUT',\r\n            'Access-Control-Allow-Headers': 'append,delete,entries,foreach,get,has,keys,set,values,Authorization'\r\n        });\r\n    }\r\n\r\n    public get(url: string = ''): Observable<any> {\r\n        return this.http.get(this.getUrl(url), {\r\n            headers: this.getHeaders()\r\n        })\r\n            .pipe(map((response) => response));\r\n    }\r\n\r\n    public post(url: string = '', data: any = {}): Observable<any> {\r\n        return this.http.post(this.getUrl(url), data, {\r\n            headers: this.getHeaders()\r\n        });\r\n    }\r\n\r\n    public put(url: string = '', data: any = {}): Observable<any> {\r\n        return this.http.put(this.getUrl(url), data, {\r\n            headers: this.getHeaders()\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {UserModel} from '../models/user.model';\r\nimport {BaseApi} from './core/base-api';\r\n\r\n@Injectable()\r\nexport class UserService extends BaseApi {\r\n\r\n    constructor(public http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    // getUserByEmail(email: string): Observable<UserModel> {\r\n    //     return this.http.get(`${this.baseUrl}users?email=${email}`)\r\n    //         .pipe(map((user: UserModel[]) => user[0] ? user[0] : undefined));\r\n    // }\r\n    //\r\n    // createNewUser(user): Observable<UserModel> {\r\n    //     return this.http.post<UserModel>(this.baseUrl + 'users', user);\r\n    // }\r\n\r\n    getUserByEmail(email: string): Observable<UserModel> {\r\n        return this.get(`users?email=${email}`)\r\n            .pipe(map((user: UserModel[]) => user[0] ? user[0] : undefined));\r\n    }\r\n\r\n    createNewUser(user): Observable<UserModel> {\r\n        return this.post('users', user);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\n\r\nimport {LoaderComponent} from './components/loader/loader.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        NgxChartsModule\r\n    ],\r\n    exports: [\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        NgxChartsModule,\r\n        LoaderComponent\r\n    ],\r\n    declarations: [\r\n        LoaderComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport 'rxjs';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":""}